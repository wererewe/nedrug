{"version":3,"sources":["App.tsx","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","height","justifyContent","backgroundColor","palette","background","paper","flexDirection","button","width","formControl","border","divider","marginTop","spacing","padding","info","marginBottom","DragDropFile","handleFile","children","suppress","evt","stopPropagation","preventDefault","onDrop","files","dataTransfer","onDragEnter","onDragOver","SheetJSFT","map","x","join","DataInput","isLoading","styles","Box","className","Typography","InputLabel","htmlFor","type","id","accept","onChange","e","target","disabled","onClick","event","value","App","useState","itemNames","setItemNames","result","setResult","setIsLoading","setIsError","isSuccess","setIsSuccess","title","setTitle","filterData","items","item_name","CNSGN_MANUF","Object","values","pickBy","item","name","CNSGN_MANUF_VALUE","ITEM_SEQ","prevArray","decodeURI","fetchData","a","axios","get","params","ServiceKey","encodeURI","response","data","XMLParser","parseFromString","getElementsByTagName","useEffect","length","Promise","all","fetch","console","log","wb","XLSX","utils","book_new","worksheet","json_to_sheet","wscols","json","objectMaxLength","jsonData","entries","idx","columnValue","w","autofitColumns","book_append_sheet","writeFile","file","reader","FileReader","rABS","readAsBinaryString","onload","bstr","workbook","read","wsname","SheetNames","ws","Sheets","sheet_to_json","header","readAsArrayBuffer","Grid","container","style","LinearProgress","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","ReactDOM","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.95e71732.chunk.js","sourcesContent":["import { Box, InputLabel,  LinearProgress,  makeStyles } from \"@material-ui/core\";\nimport Grid from '@material-ui/core/Grid';\nimport axios from 'axios';\nimport pickBy from \"lodash/pickBy\";\nimport React, { Fragment, useEffect, useState } from 'react';\nimport XMLParser from 'react-xml-parser';\nimport XLSX from \"xlsx\";\nimport Typography from '@material-ui/core/Typography';\n\nconst ServiceKey =   'g+gDJ8fX9NxkFUwqsYpWCe/3VlYdtrcAfYfoIz/Xbcjh5+wl+O4npiMXHrsm95hb4y0EwHRnY1YasZPCzJrCHQ=='\n\nfunction App() {\n  const styles = useStyles();\n  const [itemNames, setItemNames] = useState<any>([])\n  const [result, setResult] = useState<any>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [isError, setIsError] = useState(false)\n  const [isSuccess, setIsSuccess] = useState(false)\n  const [title, setTitle] = useState('')\n\n  const filterData = (items: any, item_name: string) => {\n\n    const CNSGN_MANUF = Object.values(pickBy(items, (item: any) => item.name === \"CNSGN_MANUF\"))\n    if (!CNSGN_MANUF || !CNSGN_MANUF[0] || !CNSGN_MANUF[0].value) return;\n    const CNSGN_MANUF_VALUE = CNSGN_MANUF[0].value\n\n    const ITEM_SEQ = Object.values(pickBy(items, (item: any) => item.name === \"ITEM_SEQ\"))\n    \n    setResult((prevArray: any) => [...prevArray, {\n      '품목기준코드': ITEM_SEQ[0].value,  \n      '품목명': decodeURI(item_name), \n      '위탁제조업체': CNSGN_MANUF_VALUE, \n    }])\n    \n  }\n\n  \n  const fetchData = (async (item_name: string) => {\n    \n  \n    const baseUrl = 'http://apis.data.go.kr/1471057/MdcinPrductPrmisnInfoService1/getMdcinPrductItem'; /*URL*/\n    const response = await axios.get(baseUrl, {\n      params: {\n        ServiceKey,\n        item_name: encodeURI(item_name)\n      }})\n    \n    const data = new XMLParser().parseFromString(response.data); \n\n    const items = data.getElementsByTagName('item')[0]?.children\n    if (!items) return\n    filterData(items, item_name)\n   })\n\n\n\n  useEffect(() => {\n    if (!itemNames || !itemNames.length) { return }\n    if (isLoading) return\n    \n    \n    try {\n      const fetch = async () => {\n      setIsLoading(true)\n      await Promise.all(itemNames.map(fetchData));\n      setIsSuccess(true)\n    }\n    fetch()\n    \n      \n    } catch (e) {\n      console.log('error=', e)\n      setIsLoading(false)\n    } \n\n  }, [itemNames])\n\n  const autofitColumns = (json: any[]) => {\n\n    let objectMaxLength: number[] = [];\n  \n    json.map(jsonData => {\n       Object.entries(jsonData)\n             .map(([, v], idx) => {\n                let columnValue = v as string\n                objectMaxLength[idx] = objectMaxLength[idx] >= columnValue.length ? objectMaxLength[idx] : columnValue.length\n             })\n    })\n    const wscols = objectMaxLength.map((w: number) => ({width: w*2}))\n    return wscols\n  }\n\n  useEffect(() => {\n    if (!isSuccess || !result?.length) return\n    \n    setIsLoading(false)\n    \n    const wb = XLSX.utils.book_new();\n    const worksheet = XLSX.utils.json_to_sheet(result);\n    const wscols = autofitColumns(result)\n    worksheet[\"!cols\"] = wscols;\n\n    XLSX.utils.book_append_sheet(wb, worksheet, \"Sheet0\");\n\n    XLSX.writeFile(wb, `[export]${title}`);\n\n  }, [isSuccess, result])\n  \n\n  const handleFile = (file:File) => {\n    setIsSuccess(false)\n    setItemNames([])\n    setResult([])\n    setIsError(false)\n    \n    setTitle(file.name)\n\t\tconst reader = new FileReader();\n\t\tconst rABS = !!reader.readAsBinaryString;\n\t\treader.onload = (e: any) => {\n\t\t\tconst bstr = e.target.result;\n\t\t\tconst workbook = XLSX.read(bstr, {type:rABS ? 'binary' : 'array'});\n\t\t\tconst wsname = workbook.SheetNames[0];\n\t\t\tconst ws = workbook.Sheets[wsname];\n      \n\t\t\tconst data = XLSX.utils.sheet_to_json(ws, {header:1});\n      \n      ws['!ref'] = `B2:B${data.length}`\n      const result = XLSX.utils.sheet_to_json(ws, {header:1});\n      \n      setItemNames(result)\n\t\t\t\n\t\t};\n\t\tif(rABS) reader.readAsBinaryString(file); else reader.readAsArrayBuffer(file);\n\t};\n  return (\n  <Grid container className={styles.root}>\n    <Box style={{width:'100%'}}>\n    {isLoading && <LinearProgress />}\n    </Box>\n    <DragDropFile handleFile={handleFile}>\n      <div className=\"row\"><div className=\"col-xs-12\">\n        <DataInput handleFile={handleFile} isLoading={isLoading}/>\n      </div></div>\n    </DragDropFile>\n  </Grid>\n  )\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      height: '100vh',\n      justifyContent:'center',\n      backgroundColor: theme.palette.background.paper,\n      flexDirection: 'row'\n    },\n    button: {\n      width: 200,\n      height: 50,\n    },\n    formControl: {\n      border: `1px solid ${theme.palette.divider}`,\n      marginTop: theme.spacing(1), \n      padding: theme.spacing(1)\n    },\n    info: {\n      marginBottom: theme.spacing(3),\n    }\n}));\n\nconst DragDropFile = ({handleFile, children}: any) => {\n\t\n\tconst suppress = (evt: any) => { evt.stopPropagation(); evt.preventDefault(); };\n\tconst onDrop = (evt: any) => { evt.stopPropagation(); evt.preventDefault();\n\t\tconst files = evt.dataTransfer.files;\n\t\tif(files && files[0]) handleFile(files[0]);\n\t};\n\t return (\n<div onDrop={onDrop} onDragEnter={suppress} onDragOver={suppress}>\n\t{children}\n</div>\n\t);\n};\n\n\n/* list of supported file types */\nconst SheetJSFT = [\n\t\"xlsx\", \"xlsb\", \"xlsm\", \"xls\", \"xml\", \"csv\", \"txt\", \"ods\", \"fods\", \"uos\", \"sylk\", \"dif\", \"dbf\", \"prn\", \"qpw\", \"123\", \"wb*\", \"wq*\", \"html\", \"htm\"\n].map(function(x) { return \".\" + x; }).join(\",\");\n\n\nconst DataInput = ({handleFile, isLoading}: any) => {\n\tconst styles = useStyles();\n\tconst handleChange = (e: any) => {\n    const files = e.target.files;\n\t\tif(files && files[0]) handleFile(files[0]);\n    \n\t};\n\treturn (\n    <Fragment>\n      <Box className={styles.info}>\n        \n        <Typography>\n          검색 결과 파일을 업로드 해주세요\n        </Typography>\n      </Box>\n\n    <form className=\"form-inline\">\n      <Box>\n        <InputLabel htmlFor=\"file\">파일 업로드 </InputLabel>\n        <input type=\"file\" className={styles.formControl} id=\"file\" accept={SheetJSFT} onChange={handleChange} \n        disabled={isLoading}\n        onClick={(event: any)=> { \n          event.target.value = null\n     }}/>\n      </Box>\n    </form>\n    </Fragment>\n\t); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nconst theme = createTheme({});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n        <App/>\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}